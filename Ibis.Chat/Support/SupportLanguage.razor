<div class="support-language--dropdown">
    <div class="support-language--searchbar">
        <label>Search</label>
        <input tabindex="0" type="text" placeholder="Search langauge" @bind="searchText" @bind:event="oninput" />
    </div>
    <ul class="support-language--list">
        @if (Languages != null) {
            var filteredLanguages = Languages.Where(language =>
            string.IsNullOrWhiteSpace(searchText) ||
            language.NativeName.Contains(searchText, StringComparison.OrdinalIgnoreCase) ||
            language.DisplayName.Contains(searchText, StringComparison.OrdinalIgnoreCase)
            ).ToList();

            @foreach (var language in filteredLanguages)
            {
                @if(language.Id == User.Language)
                {
                    <li tabindex="0" class="selected-language" value="@language.Id" @onclick=@((e) => SetLanguage(@language.Id))>@language.NativeName <span>@language.DisplayName <img src="icons/Check.svg" /></span></li>
                } else
                {
                    <li tabindex="0" value="@language.Id" @onclick=@((e) => SetLanguage(@language.Id))>@language.NativeName <span>@language.DisplayName</span></li>
                }
            }
        }
    </ul>
</div>

@code {
    [CascadingParameter] public UserAvatar User { get; set; } = null!;

    ICollection<Language>? Languages { get; set; }

    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        Languages = await Api.GetLanguagesAsync();
    }

    async Task SetLanguage(string language)
    {
        User.Language = language;
        await Api.ChangeVoiceAsync(new ChangeVoiceRequest { Language = language });
        Nav.NavigateTo("/rooms");
    }
}