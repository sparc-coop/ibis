@page "/dashboard"
@layout DashboardLayout
@attribute [Authorize]

<div class="websites">
    <header class="page--header">
        <div class="header-title">
            <div class="header-text">
                <div class="title-img">
                    <img src="/images/home-02-fst.svg" />
                    <h2>My Ink</h2>
                </div>
                <p>View all sites for your projects or add new sites.</p>
            </div>
            <button class="add-website" @onclick=AddWebsite tabindex="8"><PlusIcon /> Link Page</button>
        </div>
        <div class="search--container">
            <div class="searchbar">
                <input type="text" placeholder="Search Site or Page" />
                <SearchIcon />
            </div>
            <div class="search--container-right">
                <div class="favorite">
                    <label for="favorite-toggle" class="custom-checkbox">                        
                        <input type="checkbox" id="favorite-toggle" />
                        <StarIcon />
                        Favorite
                    </label>
                </div>
                <div class="sort">
                   @*  <select>
                        <option>Sort</option>
                    </select> *@
                    <label for="sort-toggle">
                        <input type="checkbox" id="sort-toggle" />
                        <SortIcon />
                        Sort
                    </label>
                </div>
            </div>
        </div>
    </header>
    @* <div class="websites-list">
    @foreach (var site in Sites)
    {
    <WebsiteCard Site="site" />
    }
    </div> *@
    <div class="pages-list">
        @if (Rooms != null)
        {
            foreach (var room in Rooms)
            {
                string? endpoint = "/" + room.RoomId;
                <PageCard RoomId="@room.RoomId" Type="Page" Title="@room.Name" Endpoint="@endpoint" DateModified="@room.LastActiveDate" />
            }
        }
    </div>
</div>

@inject Sparc.Blossom.Authentication.BlossomAuthenticationStateProvider Auth
@inject IModalService Modal
@code {
    // List<GetRoomResponse> Sites = new();
    ICollection<GetRoomResponse>? Rooms;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Sites = (await Api.GetRoomsAsync("ink")).HostedRooms.ToList();
            var rooms = await Api.GetRoomsAsync("Content");
            Rooms = rooms.HostedRooms.Union(rooms.InvitedRooms).ToList();
        }
        catch (ApiException ex) when (ex.StatusCode == 401)
        {
            await Auth.LogoutAsync();
            Nav.NavigateTo("/dashboard", true);
        }
    }

    void AddWebsite()
    {
        var options = new ModalOptions()
            {
                HideHeader = true,                
                Position = ModalPosition.Middle
            };
        Modal.Show<AddModal>("Add New Site to Ibis", options);
    }
}