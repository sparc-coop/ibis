@inherits RealtimeComponent

@if (Balance.HasValue)
{
    <aside tabindex="0" class="balance @(Balance.Value.Ticks < 0 ? "negative" : "")" title="@Balance.Value.ToString("g") Remaining (Click to add minutes)" @onclick=AddFunds>
        @Math.Floor(Balance.Value.TotalMinutes).ToString("N0")m @(Balance.Value.Seconds)s remaining
    </aside>
}

@code {
    [Parameter] public UserAvatar User { get; set; } = null!;
    [Parameter]
    [SupplyParameterFromQuery(Name = "payment_intent_client_secret")] public string? PaymentIntentClientSecret { get; set; }
    TimeSpan? Balance;

    protected override async Task OnInitializedAsync()
    {
        var ticks = await Api.GetUserBalanceAsync();
        Balance = TimeSpan.FromTicks(ticks);
        
        await On<BalanceChanged>(User.Id, x => Balance = TimeSpan.FromTicks(x.Ticks));
    }

    async Task AddFunds()
    {
        var parameters = new ModalParameters();
        if (PaymentIntentClientSecret != null)
            parameters.Add("PaymentIntentClientSecret", PaymentIntentClientSecret);

        var modal = Modal.Show<AddFundsModal>("Add Funds", parameters);
        var result = await modal.Result;        
    }
}