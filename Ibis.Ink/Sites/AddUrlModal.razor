@inherits SparcModal

<div class="add-url-modal">
    <header>
        <h6>Add URL</h6> 
         <p class="medium">Add an URL to @WebsiteId</p>           
    </header>

    @if (!string.IsNullOrWhiteSpace(SuccessMessage))
    {
        <p class="success">@SuccessMessage</p>
    }
    else
    {
        <div class="website-link-wrapper">
        <p class="medium">URL:</p>
        <input type="text" class="website-link" placeholder="URL" @bind="newUrl" />
    </div> 
    }
       
    <div class="close-add-btns">
        <button class="close-button" type="button" aria-label="Close" @onclick="Cancel">Close</button>
        <button class="add-button" @onclick=AddUrl>Add</button>
    </div>
</div> 

@code {
    [Parameter] public string WebsiteId { get; set; }
    [Parameter] public EventCallback<bool> OnUrlAdded { get; set; }

    private string newUrl = "";
    private string SuccessMessage { get; set; } = "";

    async Task AddUrl()
    {       
        if (!string.IsNullOrWhiteSpace(newUrl))
        {                     
            var request = new AddUrlToRoomRequest { RoomId = WebsiteId, Url = newUrl };
            var success = await Api.AddUrlToRoomAsync(request);

            if (success)
            {
                SuccessMessage = "URL added successfully!";

                await OnUrlAdded.InvokeAsync(true);                
            }
            else
            {
                SuccessMessage = "Failed to add URL. Please try again.";
            }

            newUrl = "";
            StateHasChanged();
            await Task.Delay(2000);
            await Ok();
        }
    }
}
    