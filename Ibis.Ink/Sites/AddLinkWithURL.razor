@inherits SparcModal

<div class="add-site-modal">
    <header>
        <div class="header-title-and-button">
            <div class="header-title-with-icon">
                <LinkAngledIcon />
                <h5>Link with URL</h5>
            </div>
            <button class="close-button" type="button" aria-label="Close" @onclick="Cancel">
                <CloseIcon />
            </button>
        </div>
        <p class="medium">Porem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio.</p>
    </header>

    <div class="website-name-wrapper">
        <p class="medium">Page Name</p>
        <input type="text" class="website-name" placeholder="Page Name" @bind=Site.RoomName />
    </div>

    <div class="website-link-wrapper">
        <p class="medium">Page Link</p>
        <input type="text" class="website-link" placeholder="Page Link" />
    </div>

    <div class="manual-input-wrapper">
        <input type="checkbox" class="manual-input" />
        <label>Pull other pages</label>
    </div>

    <div class="close-add-btns">
        <button class="close-button" type="button" aria-label="Close" @onclick="GoBack">Back</button>
        <button class="add-button" @onclick=Save>Link</button>
    </div>
</div>

@code {
    [Parameter] public EventCallback<bool> OnBack { get; set; }
   
    NewRoomRequest Site = new() { RoomType = "ink" };

    async Task Save()
    {
        var newSite = await Api.CreateRoomAsync(Site);
        Nav.NavigateTo($"/websites/{newSite.RoomId}");
    }

    private async Task GoBack()
    {
        await OnBack.InvokeAsync(true);
    }
}