@inherits SparcModal

<div class="page-metadata-settings--modal">
    
    <header>
        <div class="header-title-and-button">
            <h5>Manage Metadata</h5>
            <button class="close-button" type="button" aria-label="Close" @onclick="Cancel">
                <CloseIcon />
            </button>
        </div>
        <p class="subheader">Porem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio.</p>
    </header>

    <div class="metadata-search--wrapper">
        <div class="metadata-search">
            <img src="icons/search-icon.svg" />
            <input type="search" placeholder="Search" @bind=SearchTerm @bind:after="Search" @bind:event="oninput"/>
        </div>
        <button class="add-metadata-btn">Add</button>
    </div>

    <div class="modal-content page-metadata-list--wrapper">
        @if (Metadata == null)
        {
            <div class="empty-metadata">No Metadata</div>
        } else if (FilteredMetadata == null)
        {
            @foreach (var data in Metadata)
            {
                <article class="metadata-card">
                    <h6 class="data-name">@data.Key</h6>
                    <button class="delete-data-btn"><img src="icons/trash.svg" /></button>
                </article>
            }
        } else if (FilteredMetadata != null) {
            @foreach (var data in FilteredMetadata)
            {
                <article class="metadata-card">
                    <h6 class="data-name">@data.Key</h6>
                    <button class="delete-data-btn"><img src="icons/trash.svg" /></button>
                </article>
            }
        }
    </div>

    <div class="page-metadata-buttons--wrapper">
        <button class="back-btn" @onclick=Cancel>Back</button>
        <button class="link-btn">Link</button>
    </div>

</div>

@code {
    [Parameter] public GetRoomResponse? RoomInfo { get; set; }
    IDictionary<string, string>? Metadata;
    IDictionary<string, string>? FilteredMetadata;
    string? SearchTerm;

    protected override async Task OnInitializedAsync()
    {
        @if (RoomInfo != null)
        {
            Metadata = RoomInfo.Metadata;
        }
    }

    private void Search()
    {
        if (Metadata != null && SearchTerm != null)
        {
            FilteredMetadata = Metadata.Where(x => x.Key.ToLower().Contains(SearchTerm.ToLower())).ToDictionary(x => x.Key, x => x.Value);
        }
    }
}
