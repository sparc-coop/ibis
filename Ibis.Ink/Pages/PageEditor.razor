@page "/content/{RoomId}"
@layout DashboardLayout

@if (Page != null)
{
    <div class="page-editor">
        @if (showNotification)
        {
            <NotificationBar OnCloseButtonClick="HandleCloseButtonClick" />
        }
        <header>
            <div class="header-left">
                <div class="back-btn">
                    <button @onclick="GoBack" class="back">
                        <ArrowCurveLeftIcon />
                        Back to @Page.Name
                    </button>
                </div>
                <div class="header-info">
                    <img src="/images/Rectangle 592.png" />
                    <h2>@Page.Name/@RoomId</h2>
                    @* <Breadcrumbs WebsiteId="Test Website" WebsiteTitle="@Page.Name" PageTitle="@RoomId" /> *@
                    <button class="more"><MoreIcon /></button>
                </div>
            </div>
            <div class="header-right">
                <button @onclick=OpenPageMetadataModal>
                    <img src="icons/metadata-icon.svg" /> Metadata
                </button>
                <button>
                    <img src="icons/addcontent-icon.svg" /> Add Content
                </button> 
                <button>
                    <img src="icons/previewcontent-icon.svg" /> Preview
                </button>
                <button class="publish-btn">Publish</button>
            </div>
        </header>
        <div class="main-page-editor-content">
            <div class="page-content @(IsExpanded ? "expanded" : "")">
                <ContentList Page=Page OnMessageClicked="HandleMessageClicked" />
            </div>
            <div class="message-editor @(IsExpanded ? "expanded" : "")">
                <ContentEditor RoomId="@RoomId" SelectedMessage="@SelectedMessage" OnExpandClicked="HandleExpandClicked" OnContentUpdated="OnContentUpdated" />
            </div>
        </div>
    </div>
}

@code {
    public GetRoomResponse? Page { get; set; }
    // [Parameter] public string WebsiteId { get; set; } = null!;
    [Parameter] public string RoomId { get; set; } = null!;
    public Message? SelectedMessage { get; set; }
    private bool IsExpanded = false;
    private bool showNotification = true;

    protected override async Task OnInitializedAsync()
    {
        Page = await Api.JoinRoomAsync(new JoinRoomRequest { RoomId = RoomId });
    }

    void GoBack()
    {
        Nav.NavigateTo("/dashboard");
    }

    void HandleMessageClicked(Message message)
    {
        SelectedMessage = message;
        StateHasChanged();
    }

    private void HandleExpandClicked(bool expanded)
    {
        IsExpanded = expanded;
    }

    private async Task OnContentUpdated()
    {
        StateHasChanged();
    }

    private void HandleCloseButtonClick()
    {
        showNotification = false;
        StateHasChanged();
    }

    void OpenPageMetadataModal()
    {
        var options = new ModalOptions()
            {
                HideHeader = true,
                Position = ModalPosition.Middle
            };
        Modal.Show<PageMetadataModal>("Manage Metadata", options);
    }
}