@page "/content/{RoomId}"
@page "/content/{RoomId}/{Id}"
@inherits RealtimeComponent

<button @onclick="GoBack" class="back">Back to project content</button>

@if(string.IsNullOrEmpty(Id))
{
    <NewMessage Room="RoomInfo" />
} else {
    <MessageCard Message="Message" />
}


@code {
    [Parameter] public string Id { get; set; } = null!;
    [Parameter] public string RoomId { get; set; } = null!;

    Message Message;
    GetRoomResponse? RoomInfo;



    protected override async Task OnInitializedAsync()
    {
        if(Id != null)
        {
            Message = await Api.GetMessageAsync(new GetMessageRequest { RoomSlug = RoomId, Tag = Id });
        }

        RoomInfo = await Api.JoinRoomAsync(new JoinRoomRequest { RoomId = RoomId });
        await On<UserJoined>(RoomInfo.RoomId, x => { });
    }


    void GoBack()
    {
        Nav.NavigateTo($"/rooms/{RoomId}");
    }

    //async Task DeleteMessage(Message message)
    //{
    //    var result = await Api.DeleteMessageAsync(new DeleteMessageRequest { RoomId = Room.RoomId, MessageId = message.Id });
    //    if (result)
    //        RemoveMessage(message);
    //}
}