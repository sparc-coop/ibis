@inherits SparcModal

<div class="page-metadata-settings--modal">
    
    <header>
        <div class="header-title-and-button">
            <h5>Manage Metadata</h5>
            <button class="close-button" type="button" aria-label="Close" @onclick="Cancel">
                <CloseIcon />
            </button>
        </div>
        <p class="subheader">Porem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vulputate libero et velit interdum, ac aliquet odio.</p>
    </header>

    <div class="metadata-search--wrapper">
        <div class="metadata-search">
            <img src="icons/search-icon.svg" />
            <input type="search" placeholder="Search" @bind=SearchTerm @bind:after="Search" @bind:event="oninput" @onclick=ToggleDropdown/>
            <div class="metadata-search-dropdown @(ShowDropdown ? "show" : "")" @onfocusout=ToggleDropdown>
                @if (SearchTerm == null)
                {
                    @* <div class="metadata-search-dropdown-overlay" @onclick="ToggleDropdown" @onclick:stopPropagation="true"></div>*@
                    <div>
                        @foreach (var data in MetadataTypes)
                        {
                            <div class="metadata-option" @onclick=@(e => SelectMetadataOption(data.Key.ToString()))>
                                <p class="data-name">@data.Key</p>
                            </div>
                        }
                    </div>
                } else 
                {
                    @* <div class="metadata-search-dropdown-overlay" @onclick="ToggleDropdown" @onclick:stopPropagation="true"></div>*@
                    if (FilteredMetadataTypes != null)
                    {
                        <div>
                            @foreach (var data in FilteredMetadataTypes)
                            {
                                <div class="metadata-option" @onclick=@(e => SelectMetadataOption(data.Key.ToString()))>
                                    <p class="data-name">@data.Key</p>
                                </div>
                            }
                        </div>
                    }

                }
            </div>
        </div>
        <button class="add-metadata-btn">Add</button>
    </div>

    <div class="modal-content page-metadata-list--wrapper">
        @if (PageMetadata == null)
        {
            <div class="empty-metadata">No Metadata</div>
        } else 
        {
            @foreach (var data in PageMetadata)
            {
                <article class="metadata-card">
                    <h6 class="data-name">@data.Key</h6>
                    <button class="delete-data-btn"><img src="icons/trash.svg" /></button>
                </article>
            }
        }
    </div>

    <div class="page-metadata-buttons--wrapper">
        <button class="back-btn" @onclick=Cancel>Back</button>
        <button class="link-btn">Link</button>
    </div>

</div>

@code {
    [Parameter] public GetRoomResponse? RoomInfo { get; set; }
    IDictionary<string, string>? PageMetadata;
    IDictionary<string, string> MetadataTypes = new Dictionary<string, string>()
    {
        {"Author", "string"},
        {"Name", "string"},
        {"Last Modified", "timestamp"},
        {"Date Published", "timestamp" }
    };
    IDictionary<string, string>? FilteredMetadataTypes;
    string? SearchTerm;
    bool ShowDropdown;

    protected override async Task OnInitializedAsync()
    {
        @if (RoomInfo != null)
        {
            PageMetadata = RoomInfo.Metadata;
        }
    }

    private void Search()
    {
        if (MetadataTypes != null && SearchTerm != null)
        {
            FilteredMetadataTypes = MetadataTypes.Where(x => x.Key.ToLower().Contains(SearchTerm.ToLower())).ToDictionary(x => x.Key, x => x.Value);
        }
    }

    private void ToggleDropdown()
    {
        ShowDropdown = !ShowDropdown;
        Console.WriteLine("toggle dropdown");
    }

    private void SelectMetadataOption(string key)
    {
        SearchTerm = key;
        ToggleDropdown();
    }

    private async void AddMetadata(string key, string value)
    {
        if (RoomInfo != null)
        {
            // await Api.UpdateRoomOptionsAsync(new RoomOptionsRequest { RoomId = RoomInfo.RoomId, Title = RoomInfo.Name, Metadata = { key, value } });
        }

        ToggleDropdown();
    }
}