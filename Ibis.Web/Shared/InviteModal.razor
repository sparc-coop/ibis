<div class="invite-block modal">
    <h4>Invite People</h4>
    <button class="close" @onclick="Close">
        <img src="/icons/Close.svg"/>
    </button>
    <div class="invite-search">
        <input placeholder="Email" @bind="InviteEmail"/>
        <button @onclick="SendInvite" class="primary">Send Invite</button>
    </div>
    <div class="invite-users">
        @if(Group != null)
        {
            <p class="medium">Participants</p>

@*            List<RoomUser> users = Group.Users.ToList();
            @foreach(var user in users)
            {
                <div>@user.Name; 
            }*@
        }
    </div>
    <div class="share-link">
        <p class="medium">Copy & Share Link</p>
        <div class="share-link-wrapper" @onclick="CopyLink">
            <div>room.ibis.com/ratio-view-wing</div>
            <span>@CopyConfirm</span>
            <img src="/icons/copy.svg" />
        </div>
    </div>
</div>


@code {
    bool Sent = false;
    string InviteEmail;
    RoomUsersResponse Group;

    [Parameter] 
    public string RoomId { get; set; }
    [CascadingParameter] 
    BlazoredModalInstance ModalInstance { get; set; } = default!;
    string CopyConfirm = "";

    protected override async Task OnInitializedAsync() => Group = await Api.GetRoomUsersAsync(RoomId);

    async Task SendInvite() => Sent = await Api.InviteUserAsync(new InviteUserRequest { RoomId = RoomId, Email = InviteEmail });

    async Task CopyLink()
    {
        //
        CopyConfirm = "Copied!";
        await Task.Delay(3000);
        CopyConfirm = "";
    }

    void Close() => ModalInstance.CancelAsync();
}