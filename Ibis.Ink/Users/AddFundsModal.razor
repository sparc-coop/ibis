@inherits SparcModal
@using System.Globalization

<div class="add-funds-modal">
    @if (PaymentIntent != null)
    {
        <ul>
            @foreach (var amount in PaymentIntent.Amounts)
            {
                <li class="@(SelectedAmount == amount ? "selected" : "")">
                    <button @onclick="(() => ChooseAmount(amount))">@amount.ToString("C0")</button>
                </li>
            }
        </ul>

        <form>
            <div id="payment-element"></div>
            @if (SelectedAmount > 0)
            {
                <button type="button" @onclick=Pay>
                    Add @PaymentIntent.Amount
                </button>
            }
        </form>
    }
</div>


@code {
    [Parameter] public string? PaymentIntentClientSecret { get; set; }

    List<double> Amounts = new();
    double SelectedAmount;
    PaymentIntentResponse? PaymentIntent;

    protected override async Task OnInitializedAsync()
    {
        var ri = new RegionInfo(System.Threading.Thread.CurrentThread.CurrentUICulture.LCID);
        PaymentIntent = await Api.CreatePaymentIntentAsync(new PaymentIntentRequest { Amount = SelectedAmount, Currency = ri.ISOCurrencySymbol });
    }

    async Task ChooseAmount(double amount)
    {
        SelectedAmount = amount;
        await UpdateAmountAsync();
    }

    async Task UpdateAmountAsync()
    {
        if (SelectedAmount == 0)
            return;

        var request = new PaymentIntentRequest
            {
                Id = PaymentIntent?.Id,
                Amount = SelectedAmount,
                Currency = PaymentIntent?.Currency
            };

        PaymentIntent = await Api.CreatePaymentIntentAsync(request);
        await JS.InvokeVoidAsync("initStripe", PaymentIntent.ClientSecret, "#payment-element");
    }

    async Task Pay()
    {
        // Loading indicator
        var result = await JS.InvokeAsync<string>("confirmStripe", Nav.Uri);
        await Ok();
    }
}