<div class="MarkdownEditorComponent">
    <MarkdownEditor @bind-Value="@markdownValue" ValueHTMLChanged="@(e => OnMarkdownValueHTMLChanged(markdownHtml))" />

    <hr />

    <div class="markdown-result">
        @((MarkupString)markdownHtml)
    </div>
</div>

@code {
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    string markdownValue = "#Markdown Editor\nThis is a test";
    string markdownHtml;

    protected override void OnInitialized()
    {
        markdownHtml = Markdig.Markdown.ToHtml(markdownValue ?? string.Empty);
        base.OnInitialized();
    }

    async Task OnMarkdownValueChanged(string value)
    {
        markdownHtml = Markdig.Markdown.ToHtml(markdownValue ?? string.Empty);
        await ValueChanged.InvokeAsync(markdownValue);
        // return Task.CompletedTask;
    }

    async Task OnMarkdownValueHTMLChanged(string value)
    {
        markdownHtml = value;
        await ValueChanged.InvokeAsync(markdownHtml);
        // return Task.CompletedTask;
    }
}