<div class="MarkdownEditorComponent">
    <MarkdownEditor @bind-Value="@markdownValue" ValueHTMLChanged="@OnMarkdownValueHTMLChanged" />
    @* <MarkdownEditor @bind-Value="@markdownValue" @onchange="@(e => OnMarkdownValueChanged(markdownValue))" ValueHTMLChanged="@(e => OnMarkdownValueHTMLChanged(markdownHtml))" /> *@

    <hr />

    <div class="markdown-result">
        @((MarkupString)markdownHtml)
    </div>
</div>

@code {
    // [Parameter] public EventCallback<string> OnContentChanged { get; set; }

    string markdownValue = "#Markdown Editor\nThis is a test";   
    string markdownHtml;

    protected override void OnInitialized()
    {
        markdownHtml = Markdig.Markdown.ToHtml(markdownValue ?? string.Empty);
        base.OnInitialized();
    }

    Task OnMarkdownValueChanged(string value)
    {
        return Task.CompletedTask;
    }

    // async Task OnMarkdownValueChanged(string value)
    // {
    //     markdownHtml = Markdig.Markdown.ToHtml(markdownValue ?? string.Empty);
    //     await OnContentChanged.InvokeAsync(markdownValue);
    // }

    Task OnMarkdownValueHTMLChanged(string value)
    {
        markdownHtml = value;
        return Task.CompletedTask;
    }

    // Task OnMarkdownValueHTMLChanged(string value)
    // {
    //     markdownHtml = value;
    //     await OnContentChanged.InvokeAsync(markdownHtml);
    // }
}