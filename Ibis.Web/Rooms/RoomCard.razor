<div class="room-card" @onclick="GoToRoom">
    <div class="top-bar">
        <div class="room-icon">
            <img src="/icons/Room-Icon.svg" />
        </div>
        <div class="option-icons" @onclick:stopPropagation="true">
            <RoomShare Room="Room" />
            <img src="/icons/more-vertical.svg" @onclick:stopPropagation="true" @onclick="ToggleDropdown" />
        </div>

        @if (ShowDropdown)
        {
            <div class="dropdown" @onclick:stopPropagation="true">
                <div class="dropdown--overlay" @onclick:stopPropagation="true" @onclick="ToggleDropdown"></div>
                <ul>
                    <li @onclick="ShowEditModal">Edit Name</li>
                    <li @onclick="ShowDeleteModal">Delete Room</li>
                </ul>
            </div>
        }
    </div>

    <div class="room-details">
        <h6>@Room.Name</h6>
        <p class="medium">
            @(Room.LastActiveDate != null
                ? Room.LastActiveDate.Value.LocalDateTime.ToString("MMMM dd, H:mm tt")
                : Room.StartDate.LocalDateTime.ToString("MMMM dd, H:mm tt"))
        </p>
    </div>

    <div class="room-members">
        @foreach (var member in Room.Users.Take(10))
        {
            <Avatar User="member" />
        }
    </div>
</div>

@code {
    [Parameter] public GetRoomResponse Room { get; set; } = null!;
    bool ShowDropdown;

    void GoToRoom()
    {
        Nav.NavigateTo($"/rooms/{Room.RoomId}", true);
    }

    async Task ShowDeleteModal()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(DeleteModal.RoomId), Room.RoomId);
        var deleteModal = Modal.Show<DeleteModal>("DeleteModal", parameters);
        var result = await deleteModal.Result;

        if (result.Cancelled)
        {
            ToggleDropdown();
        }
    }

    async Task ShowEditModal()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(EditModal.RoomId), Room.RoomId);
        parameters.Add(nameof(EditModal.Title), Room.Name);
        var editModal = Modal.Show<EditModal>("EditModal", parameters);

        var result = await editModal.Result;
        if (result.Cancelled)
        {
            ToggleDropdown();
        }
    }

    void ToggleDropdown()
    {
        ShowDropdown = !ShowDropdown;
    }
}
