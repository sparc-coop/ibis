@layout EmptyLayout

<div class="onboarding">
    @if (User != null)
    {
        <header>
            <Avatar User="User" />
        </header>

        <CascadingValue Value="User">
            <ul class="tabs">
                @foreach (var tab in Tabs)
                {
                    <li class="@(Tab == tab ? "selected" : "")" @onclick="(() => SetTab(tab))">@tab</li>
                }
            </ul>

            @switch (Tab)
            {
                case "Profile":
                    <AccountDetails />
                    break;
                case "Language":
                    <LanguageSelector />
                    break;
                case "Voice":
                    <VoiceSelector />
                    break;
                case "Color":
                    <ColorSelector />
                    break;
                case "Emoji":
                    <EmojiSelector />
                    break;
            }

            <button @onclick="Done">Done</button>
        </CascadingValue>
    }
</div>

@code {
    string Tab { get; set; } = "Emoji";
    List<string> Tabs = new() { "Emoji", "Color", "Language", "Voice", "Profile" };
    [CascadingParameter] public UserAvatar? User { get; set; }
    [Parameter] public EventCallback OnDone { get; set; }

    void SetTab(string tab) => Tab = tab;

    async Task Done()
    {
        await OnDone.InvokeAsync();
    }
}
