<div class="voice-selector">
    <h2>
        Ibis will use this voice to speak for you. So make sure the voice you choose represents you! If you're not sure, you can always change it.
    </h2>
    @if (Dialects != null)
    {
        <div class="voice-list ibis-ignore">
            @foreach (var dialect in Dialects)
            {
                <h4>@dialect.NativeName</h4>
                <ul>
                    @foreach (var voice in dialect.Voices)
                    {
                        <li @onclick="(() => SetVoice(voice))" class="@(User.Voice == voice.ShortName ? "selected" : "")">
                            @voice.DisplayName
                            <aside class="right">
                                <span>@voice.Gender</span>
                                <PlayIcon />
                            </aside>
                        </li>
                    }
                </ul>
            }
        </div>
        @if (AudioPreviewUrl != null)
        {
            <audio autoplay src="@AudioPreviewUrl" />
        }
    }
</div>

@code {
    [CascadingParameter] public UserAvatar User { get; set; } = null!;
    IEnumerable<Dialect>? Dialects { get; set; }
    Voice? SelectedVoice { get; set; }
    string? AudioPreviewUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var languages = await Api.GetLanguagesAsync();
        Dialects = languages.Where(x => x.Id == User.Language).SelectMany(x => x.Dialects).ToList();
    }

    async Task SetVoice(Voice voice)
    {
        User.Voice = voice.ShortName;
        SelectedVoice = voice;
        var result = await Api.ChangeVoiceAsync(new ChangeVoiceRequest { Language = User.Language, VoiceName = SelectedVoice.ShortName });

        AudioPreviewUrl = null;
        StateHasChanged();
        
        AudioPreviewUrl = result.PreviewAudioUrl;
    }
 
}
