<section class="EditText">
    <div class="input">
        <input @bind="ModifiedText" @bind:event="oninput" onkeydown=MaybeSendText />
        <div class="buttons">
            <button @onclick="SendText" aria-label="Send">Send</button>
        </div>
        <div class="buttons-cancel">
            <button @onclick="Cancel" aria-label="Cancel">Cancel</button>
        </div>
    </div>
</section>

@using Blazored.Modal

@code {
    [Parameter] public string? ConversationId { get; set; }
    [Parameter] public string? Language { get; set; }
    [Parameter] public string? MessageId { get; set; }
    [Parameter] public string? Text { get; set; }
    [Parameter] public string? ModifiedText { get; set; }
    List<Message> Messages = new();

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;

    void AddMessage(Message message)
    {
        var existingId = Messages.FindIndex(x => x.Id == message.Id);
        if (existingId > -1)
            Messages[existingId] = message;
        else
            Messages.Add(message);

        StateHasChanged();
    }

    async Task MaybeSendText(KeyboardEventArgs args)
    {
        if (args.Code == "Enter")
            await SendText();
    }

    async Task SendText()
    {
        if (ModifiedText != Text)
        {
            var newMessage = await Api.SendMessageAsync(new SendMessageRequest { ConversationId = ConversationId, Message = Text, Language = Language, MessageId = MessageId, ModifiedMessage = ModifiedText });
            AddMessage(newMessage);
            await ModalInstance.CloseAsync();
        }
        else
        {
            var newMessage = await Api.SendMessageAsync(new SendMessageRequest { ConversationId = ConversationId, Message = Text, Language = Language, MessageId = MessageId, ModifiedMessage = null });
            AddMessage(newMessage);
            await ModalInstance.CloseAsync();
        }
    }

    async Task Cancel()
    {   // delete message
        await Api.DeleteMessageAsync(new DeleteMessageRequest { ConversationId = ConversationId, MessageId = MessageId });
        // delete Audio file from Azure storage
        // close modal
        await ModalInstance.CancelAsync();
    }
}
