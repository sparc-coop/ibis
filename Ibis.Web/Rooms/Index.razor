@page "/rooms"
@layout DashLayout
@attribute [Authorize]

<div class="dashboard">
	 <div class="actions">
         <div class="header">
             <h3>Your Rooms</h3>
             <button class="add" @onclick="ShowRoomModal"><i class="material-icons">add</i>Create New Room</button>
         </div>
         <div class="search-wrapper">
             <div class="searchbar">
                 <input placeholder="Search rooms"/>
                 <a class="search"><img src="/icons/Search.svg" /></a>
             </div>
             <div class="grid-wrapper">
                 <div class="selected @(listView != "" ? "selected-left" : null)"></div>
                 <div class="grid" @onclick="ToggleListView">
                     Grid
                 </div>
                 <div class="list" @onclick="ToggleListView">
                     List
                 </div>
             </div>
         </div>
    </div>

    <div class="rooms @listView">
        @if(Rooms != null)
        {
            @foreach(var room in Rooms.OrderByDescending(x => x.LastActiveDate).ThenByDescending(x => x.StartDate))
            {
                <div class="room-card" @onclick="@(e => GoToRoom(room.RoomId))">
                    <div class="top-bar">
                        <div class="room-icon">
                            <img src="/icons/Room-Icon.svg" />
                        </div>
                        <div class="option-icons">
                            <img src="/icons/link.svg" />
                            <img src="/icons/more-vertical.svg" />
                        </div>
                    </div>
                    <div class="room-details">
                        <h6>@room.Name</h6>
                        <p class="medium">
                        @(room.LastActiveDate != null 
                            ? room.LastActiveDate.Value.LocalDateTime.ToString("MMMM dd, H:mm tt")
                            : room.StartDate.LocalDateTime.ToString("MMMM dd, H:mm tt"))
                        </p>
                    </div>
                <div class="room-members">
                    <div class="member">
                        <img src="/images/Avatar.svg" />
                    </div>
                    <div class="member">
                        <img src="/images/Avatar.svg" />
                    </div>
                    <div class="member">
                        <img src="/images/Avatar.svg" />
                    </div>
                    <div class="member">
                        <img src="/images/Avatar.svg" />
                    </div>
                    <div class="member">
                        <img src="/images/Avatar.svg" />
                    </div>
                    <div class="member">
                        <img src="/images/Avatar-more.svg" />
                    </div>              
                </div>
            </div>
            }  
        }
    </div>
</div>


@code {
    ICollection<GetRoomResponse>? Rooms;
    string listView = "";

    protected override async Task OnInitializedAsync()
    {
        var user = await Api.GetUserAsync();
        Rooms = await Api.GetUserRoomsAsync(user.Id);
    }

    public record LanguageItem(string name, string nativeName, string dir);

    void ShowRoomModal()
    {
        Modal.Show<RoomModal>("RoomModal");
    }

    void GoToRoom(string Id)
    {
        Nav.NavigateTo($"/rooms/{Id}", true);    
    }

    void ToggleListView()
    {
        if(string.IsNullOrEmpty(listView))
        {
            listView = "show-list";
        } else
        {
            listView = "";
        }
    }
}